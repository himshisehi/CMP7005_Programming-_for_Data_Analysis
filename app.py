{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "43512e3d-709c-47ca-b354-468b0bd03821",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-05-03 15:48:46.994 No runtime found, using MemoryCacheStorageManager\n",
      "2025-05-03 15:48:46.995 No runtime found, using MemoryCacheStorageManager\n",
      "2025-05-03 15:48:46.997 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:46.997 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:46.999 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.484 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.484 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.484 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.484 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.488 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.489 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.489 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.490 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.491 Session state does not function when running a script without `streamlit run`\n",
      "2025-05-03 15:48:47.493 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.494 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.496 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.496 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.496 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.496 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.499 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.500 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.546 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.546 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.546 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.546 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.557 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.557 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.558 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.559 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.560 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.561 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.562 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.562 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.564 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.564 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.567 Serialization of dataframe to Arrow table was unsuccessful. Applying automatic fixes for column types to make the dataframe Arrow-compatible.\n",
      "Traceback (most recent call last):\n",
      "  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\streamlit\\dataframe_util.py\", line 822, in convert_pandas_df_to_arrow_bytes\n",
      "    table = pa.Table.from_pandas(df)\n",
      "            ^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"pyarrow\\\\table.pxi\", line 4751, in pyarrow.lib.Table.from_pandas\n",
      "  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pyarrow\\pandas_compat.py\", line 639, in dataframe_to_arrays\n",
      "    arrays = [convert_column(c, f)\n",
      "             ^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pyarrow\\pandas_compat.py\", line 639, in <listcomp>\n",
      "    arrays = [convert_column(c, f)\n",
      "              ^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pyarrow\\pandas_compat.py\", line 626, in convert_column\n",
      "    raise e\n",
      "  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pyarrow\\pandas_compat.py\", line 620, in convert_column\n",
      "    result = pa.array(col, type=type_, from_pandas=True, safe=safe)\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"pyarrow\\\\array.pxi\", line 362, in pyarrow.lib.array\n",
      "  File \"pyarrow\\\\array.pxi\", line 87, in pyarrow.lib._ndarray_to_array\n",
      "  File \"pyarrow\\\\error.pxi\", line 92, in pyarrow.lib.check_status\n",
      "pyarrow.lib.ArrowInvalid: (\"Could not convert dtype('<M8[ns]') with type numpy.dtypes.DateTime64DType: did not recognize Python value type when inferring an Arrow data type\", 'Conversion failed for column 0 with type object')\n",
      "2025-05-03 15:48:47.631 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.632 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.632 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.633 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.634 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.635 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.659 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-05-03 15:48:47.659 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n"
     ]
    }
   ],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "import numpy as np\n",
    "\n",
    "# Load dataset\n",
    "@st.cache_data\n",
    "def load_data():\n",
    "    df = pd.read_csv(\"final_air_quality.csv\")  # Change this to your actual file name\n",
    "    df['Datetime'] = pd.to_datetime(df['Datetime'])\n",
    "    return df\n",
    "\n",
    "final_air_quality = load_data()\n",
    "\n",
    "# Sidebar menu\n",
    "st.sidebar.title(\"Air Quality Analysis App\")\n",
    "page = st.sidebar.radio(\"Select a Page\", [\"Data Overview\", \"Exploratory Data Analysis (EDA)\", \"Modeling and Prediction\"])\n",
    "\n",
    "# 1. Data Overview\n",
    "if page == \"Data Overview\":\n",
    "    st.title(\"ðŸ“Š Data Overview\")\n",
    "    st.write(\"### First few rows of the dataset:\")\n",
    "    st.write(final_air_quality.head())\n",
    "\n",
    "    st.write(\"### Dataset Info:\")\n",
    "    st.write(f\"Shape: {final_air_quality.shape}\")\n",
    "    st.write(\"Column Types:\")\n",
    "    st.write(final_air_quality.dtypes)\n",
    "\n",
    "    st.write(\"### Missing Values:\")\n",
    "    st.write(final_air_quality.isnull().sum())\n",
    "\n",
    "# 2. EDA\n",
    "elif page == \"Exploratory Data Analysis (EDA)\":\n",
    "    st.title(\"ðŸ“ˆ Exploratory Data Analysis\")\n",
    "\n",
    "    st.write(\"#### PM2.5 Distribution Histogram\")\n",
    "    fig, ax = plt.subplots()\n",
    "    final_air_quality['PM2.5'].hist(bins=30, ax=ax, color='skyblue')\n",
    "    st.pyplot(fig)\n",
    "\n",
    "    st.write(\"#### Boxplot by Category\")\n",
    "    fig2, ax2 = plt.subplots()\n",
    "    sns.boxplot(data=final_air_quality, x='category', y='PM2.5', ax=ax2)\n",
    "    st.pyplot(fig2)\n",
    "\n",
    "    st.write(\"#### Heatmap of Correlation Matrix\")\n",
    "    corr = final_air_quality.select_dtypes(include=[np.number]).corr()\n",
    "    fig3, ax3 = plt.subplots(figsize=(10, 6))\n",
    "    sns.heatmap(corr, annot=True, fmt=\".2f\", cmap=\"coolwarm\", ax=ax3)\n",
    "    st.pyplot(fig3)\n",
    "\n",
    "# 3. Modeling and Prediction\n",
    "elif page == \"Modeling and Prediction\":\n",
    "    st.title(\"ðŸ¤– Modeling and Prediction\")\n",
    "\n",
    "    st.write(\"### Using Random Forest to Predict PM2.5\")\n",
    "\n",
    "    # Feature selection\n",
    "    features = ['PM10', 'SO2', 'NO2', 'CO', 'O3', 'Temp', 'Wspd', 'Rain', 'Dewp', 'Pre']\n",
    "    target = 'PM2.5'\n",
    "\n",
    "    # Drop NA for modeling\n",
    "    model_df =final_air_quality[features + [target]].dropna()\n",
    "\n",
    "    X = model_df[features]\n",
    "    y = model_df[target]\n",
    "\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "    rf_model = RandomForestRegressor(n_estimators=100, random_state=42)\n",
    "    rf_model.fit(X_train, y_train)\n",
    "    y_pred = rf_model.predict(X_test)\n",
    "\n",
    "    rmse = np.sqrt(mean_squared_error(y_test, y_pred))\n",
    "    r2 = r2_score(y_test, y_pred)\n",
    "    mse = mean_squared_error(y_test, y_pred)\n",
    "\n",
    "    st.write(f\"**Root Mean Squared Error (RMSE):** {rmse:.2f}\")\n",
    "    st.write(f\"**Mean Squared Error (MSE):** {mse:.2f}\")\n",
    "    st.write(f\"**RÂ² Score:** {r2:.2f}\")\n",
    "\n",
    "    st.write(\"### Feature Importance\")\n",
    "    importance = pd.Series(rf_model.feature_importances_, index=features).sort_values(ascending=False)\n",
    "    fig4, ax4 = plt.subplots()\n",
    "    sns.barplot(x=importance, y=importance.index, palette=\"viridis\", ax=ax4)\n",
    "    st.pyplot(fig4)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d396feee-c24d-4cee-b3ae-933ad7a3769c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
